/*
* Brian R Taylor
* brian.taylor@bolderflight.com
* 
* Copyright (c) 2021 Bolder Flight Systems Inc
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the “Software”), to
* deal in the Software without restriction, including without limitation the
* rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
* sell copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
* IN THE SOFTWARE.
*/

/*
* This protobuf file describes the data log format, which is transpiled
* to a C header and source file for use in the flight code. There should
* only be a single message defined, DatalogMessage, which defines all
* of the data to be logged. The message structure should be flat
* (i.e. no nested messages), consisting of native types.
*/

syntax = "proto3";

/* Data log message */
message DatalogMessage {
  int32 sys_frame_time_us = 1;
  float sys_input_volt = 2;
  float sys_reg_volt = 3;
  float sys_pwm_volt = 4;
  float sys_sbus_volt = 5;
  double sys_time_s = 6;
  bool inceptor_new_data = 7;
  int32 inceptor_mode0 = 8;
  int32 inceptor_mode1 = 9;
  bool inceptor_throttle_en = 10;
  bool inceptor_lost_frame = 11;
  bool inceptor_failsafe = 12;
  float inceptor_throttle = 13;
  float inceptor_pitch = 14;
  float inceptor_roll = 15;
  float inceptor_yaw = 16;
  bool imu_new_data = 17;
  float imu_accel_x_mps2 = 18;
  float imu_accel_y_mps2 = 19;
  float imu_accel_z_mps2 = 20;
  float imu_gyro_x_radps = 21;
  float imu_gyro_y_radps = 22;
  float imu_gyro_z_radps = 23;
  float imu_mag_x_ut = 24;
  float imu_mag_y_ut = 25;
  float imu_mag_z_ut = 26;
  float imu_dlpf_accel_x_mps2 = 27;
  float imu_dlpf_accel_y_mps2 = 28;
  float imu_dlpf_accel_z_mps2 = 29;
  float imu_dlpf_gyro_x_radps = 30;
  float imu_dlpf_gyro_y_radps = 31;
  float imu_dlpf_gyro_z_radps = 32;
  float imu_dlpf_mag_x_ut = 33;
  float imu_dlpf_mag_y_ut = 34;
  float imu_dlpf_mag_z_ut = 35;
  float imu_die_temp_c = 36;
  bool gnss_new_data = 37;
  int32 gnss_fix = 38;
  int32 gnss_num_sats = 39;
  int32 gnss_week = 40;
  float gnss_alt_wgs84_m = 41;
  float gnss_north_vel_mps = 42;
  float gnss_east_vel_mps = 43;
  float gnss_down_vel_mps = 44;
  float gnss_horz_acc_m = 45;
  float gnss_vert_acc_m = 46;
  float gnss_vel_acc_mps = 47;
  double gnss_lat_rad = 48;
  double gnss_lon_rad = 49;
  double gnss_tow_s = 50;
  bool airdata_diff_new_data = 51;
  float airdata_diff_pres_pa = 52;
  float airdata_dlpf_diff_pres_pa = 53;
  float airdata_diff_die_temp_c = 54;
  bool airdata_static_new_data = 55;
  float airdata_static_pres_pa = 56;
  float airdata_dlpf_static_pres_pa = 57;
  float airdata_static_die_temp_c = 58;
  float nav_accel_x_mps2 = 59;
  float nav_accel_y_mps2 = 60;
  float nav_accel_z_mps2 = 61;
  float nav_gyro_x_radps = 62;
  float nav_gyro_y_radps = 63;
  float nav_gyro_z_radps = 64;
  float nav_pitch_rad = 65;
  float nav_roll_rad = 66;
  float nav_heading_rad = 67;
  float nav_alt_wgs84_m = 68;
  float nav_alt_pres_m = 69;
  float nav_ias_mps = 70;
  float nav_eas_mps = 71;
  float nav_gnd_spd_mps = 72;
  float nav_gnd_track_rad = 73;
  float nav_flight_path_rad = 74;
  float nav_north_vel_mps = 75;
  float nav_east_vel_mps = 76;
  float nav_down_vel_mps = 77;
  double nav_lat_rad = 78;
  double nav_lon_rad = 79;
}
